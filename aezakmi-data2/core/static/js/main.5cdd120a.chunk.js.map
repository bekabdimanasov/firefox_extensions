{"version":3,"sources":["views/Header.js","views/Dashboard.js","views/AuthForm.js","views/UploadProfile.js","views/SaveProfile.js","views/UploadCookie.js","views/Aezakmi.js","views/Facebook.js","views/GeoSettings.js","views/ProxySettings.js","routes/BaseRouter.js","App.js","serviceWorker.js","index.js"],"names":["Header","logOut","_callee","toBackgroundMessage","regenerator_default","a","wrap","_context","prev","next","localStorage","setItem","method","chrome","runtime","sendMessage","response","_this","props","cookies","remove","history","push","stop","saveSession","JSON","parse","getItem","react_default","createElement","Navbar","target","href","src","style","height","Nav","className","paddingTop","this","login","substring","Button","title","onClick","size","paddingRight","paddingBottom","paddingLeft","backgroundColor","border","color","float","variant","Component","withCookies","withRouter","crypto","require","Dashboard","profileSelect","React","createRef","state","started","status","profileName","authString","currentUserProfile","userProfileInfo","userProfileName","userProfileReady","profilesLoaded","profileUrl","names","wait30second","toRemoveTab","fromBackground","licenseType","days","isLicenseActive","accessManageProfileFilesState","facebooktoken_ico","edithtiscookie_ico","license","axios","post","process","headers","Authorization","then","res","setState","data","accessManageProfileFiles","toggleChange30","checkStatus","checkCurrentUserProfileSelect","profile","name","index","indexOf","current","selectedIndex","start","getFbTools","window","open","toGeoSettings","toProxySettings","object","becomeUserProfile","profileReady","_ref2","Object","asyncToGenerator","mark","_callee2","d","_context2","checkProfileHash","stringify","_x","apply","arguments","str","oldHash","hash","createHash","update","hashStr","digest","becomeAllUserProfiles","forEach","item","undefined","catch","err","changeForm","e","id","currentTarget","value","ready","onEnterAezakmi","preventDefault","key","onKey","get","tmr","setInterval","_this2","views_Header","Row","Alert","concat","Col","md","Form","Control","autoFocus","onKeyPress","ref","width","display","as","onChange","length","map","marginLeft","block","disabled","marginTop","marginBottom","onMouseEnter","onMouseOut","importCookie","AuthForm","password","chPassword","chLogin","auth","firstStart","resMessage","lastSession","restoreStatus","changeInputs","onLogin","form","done","message","checkValidity","set","path","onEnterLogin","lastSessionCheck","replace","restoreSession","datetime","cur_login","noValidate","validated","Group","required","isInvalid","type","Feedback","UploadProfile","uploadStatus","UploadProfileFromFile","fileReader","handleFileRead","content","result","AfterUploadProfileFromFile","position","bottom","left","opacity","accept","file","files","FileReader","onloadend","readAsText","UploadToBackground","string","boolean","importedUserProfile","itIsNewProfile","randomInteger","min","max","rand","Math","random","floor","_callee4","profileData","userProfile","_context4","atob","_id","_ref3","_callee3","_context3","_ref4","_x6","_x5","Modal_default","show","Title","Body","for","Footer","SaveProfile","saveProfileUrl","readySave","save_cookies","getAll","i","save_history","search","text","save_activeTabs","tabs","query","savetabs","vkladki","taburls","savetab","url","pauser","timems","setTimeout","saveProfileFile","currentFingerprintNameForSaveUserData","archive","keys","currentLocalStorage","savedProfileName","encodedLocalStorageOne","encodedLocalStorage","btoa","download","UploadCookie","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","cookies_textarea","pos","Number","facebookData","fbdata","fileName","GetFBFromLocalStorage","facebook_array","splitString","stringToSplit","separator","split","handleChange","event","handleSubmit","AfterUploadCookieFromFile","UploadCookieFromFile","_ref","_x2","console","log","includes","_x3","caesar","UserText","TextToWork","decrypt","OtherSymbols","Numbers","EngAlfUp","EngAlfLower","NumbersEncrypt","EngAlfUpEncrypt","EngAlfLowerEncrypt","symbol","contains","symb","arr","letter","bind","assertThisInitialized","onSubmit","Aezakmi","namesWithCookies","namesToRemove","proxyProfileName","proxyStatus","localStorageCheck","chekedProfiles","profiles","splice","removeProfiles","location","reload","proxyChecker","proxyProtocol","proxyIp","proxyPort","proxyUser","proxyPassword","Protocol","ip","Port","code","Table","striped","bordered","hover","Check","widthvar","heightvar","userAgentConst","Facebook","fb_token_ico","bm_settings_ico","fp_create_ico","card_check_ico","quick_mod_ico","auto_rules_ico","getFbToken","fbRequest","openLink","cardCheckPoint","textAlign","fontWeight","GeoSettings","accept_language","language_Const1","languageConst1","sysTimeRegion","sysTimeConst","gpslat","gpslon","daylightOffset","countriesArrayState","timezonesArrayState","selectedCountry","selectedTimezone","profileSaved","langTimeObjects","getCountryList","countriesArray","LangTimeJSON","country","_i","_countriesArray","sort","getTimezonesList","timezonesArray","timezone","findLangTime","selectedLangTime","nav_lang","nav_langs","gps","timeZone","date","Date","now","offset","parseGeoSettings","setGeoSettings","Label","ProxySettings","proxyAddress","proxyLogin","status911","parseProxySettings","change911","newVal","setProxy","enable911","dateNow","lang","langs","region","geo","checkProxy","label","checked","BaseRouter","component","App","es6","react_router","exact","Boolean","hostname","match","ReactDOM","render","react_router_dom","Container","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.5cdd120a.chunk.js","sourcesContent":["/*global chrome*/\r\nimport React, {Component} from \"react\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Nav, Navbar, Image} from \"react-bootstrap\";\r\nimport 'material-design-icons/iconfont/material-icons.css';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    logOut = async() => {\r\n        localStorage.setItem('started', 'false');\r\n        localStorage.setItem('inProcess', 'false');\r\n        localStorage.setItem('profileHash', '');\r\n        var toBackgroundMessage = {}\r\n        toBackgroundMessage.method = 'messageLogout';\r\n        await chrome.runtime.sendMessage(toBackgroundMessage, function (response) {});\r\n        this.props.cookies.remove('auth');\r\n        this.props.cookies.remove('login');\r\n        this.props.history.push(\"/auth\");\r\n    };\r\n\r\n    saveSession = () => {\r\n        if (JSON.parse(localStorage.getItem('userProfile')) !== null) {\r\n            var toBackgroundMessage = {};\r\n            toBackgroundMessage.method = 'messageSaveSession';\r\n            chrome.runtime.sendMessage(toBackgroundMessage, function (response) {\r\n            });\r\n        }        \r\n    } \r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Navbar >\r\n                <div>\r\n                <a target=\"_blank\" href=\"https://aezakmi.run\">\r\n                <img src=\"logo.png\" style = {{height: 30}}>\r\n                </img>\r\n                </a>\r\n                </div>\r\n                <Nav className=\"mr-auto\">\r\n                </Nav>\r\n                <span style = {{paddingTop: 5}}>\r\n                <h5>\r\n                <strong>{this.props.login.substring(0, 4)}...</strong>\r\n                </h5>\r\n                </span>\r\n                <Button title=\"Log Out\" onClick = {this.logOut} size={'sm'} style = {{paddingTop: 5, paddingRight: 5, paddingBottom: 0, paddingLeft: 5, backgroundColor: 'transparent', border: 'none'}}>\r\n                <i className=\"material-icons\" style = {{color: \"black\"}}>exit_to_app</i>\r\n                </Button>\r\n                <Button style={{float: 'left', color: 'yellow'}} className=\"material-icons\" title=\"Save Your Session Before Exit\" onClick={this.saveSession} variant={'success'}>save</Button>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(withRouter(Header));\r\n","/*global chrome*/\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Form, Button, Card, Alert} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nconst crypto = require('crypto');\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n    tmr;\r\n    tmr2;\r\n    profileSelect = React.createRef();\r\n    state = {\r\n        started: false,\r\n        status: false,\r\n\r\n        profileName: '',\r\n        authString: '',\r\n        login:'',\r\n\r\n        currentUserProfile: {},\r\n        userProfileInfo: [],\r\n        userProfileName: '',\r\n        userProfileReady: false,\r\n        profilesLoaded: true,\r\n        profileUrl:\"\",\r\n\r\n        names: [],\r\n\r\n        wait30second: false,\r\n        toRemoveTab: '',\r\n        fromBackground: {},\r\n        licenseType: '',\r\n        days: '',\r\n        isLicenseActive: true,\r\n        accessManageProfileFilesState: false,\r\n        facebooktoken_ico: 'fb-mechanikus.png',\r\n        edithtiscookie_ico: 'editthiscookie.png',\r\n\r\n\r\n    };\r\n\r\n    componentWillMount() {\r\n       let authString = this.props.cookies.get('auth');\r\n       if(authString !== undefined) {\r\n           let login = this.props.cookies.get('login');\r\n           this.setState({authString: authString, login: login});\r\n       }\r\n       else {\r\n           this.props.history.push(\"/auth\");\r\n       }\r\n       \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.becomeAllUserProfiles();\r\n        this.checkCurrentUserProfileSelect();\r\n        this.checkStatus();\r\n        this.tmr = setInterval(this.checkStatus, 1000);\r\n        this.license();        \r\n    };\r\n\r\n    license = async () => {\r\n        await axios.post(process.env.REACT_APP_PUBLIC_API + '/api/vashi_documenti', {login: this.state.login}, {\r\n            headers: {\r\n                'Authorization': this.state.authString,\r\n            }\r\n        }).then(res => {\r\n\r\n            this.setState({licenseType: res.data.license, days: res.data.days})\r\n            if (res.data.days = 0) {\r\n                this.setState({isLicenseActive: false})\r\n            }\r\n            if (res.data.days > 0) {\r\n                this.setState({isLicenseActive: true})\r\n            }\r\n        })\r\n\r\n        // this.licenseExpired();\r\n        this.accessManageProfileFiles();       \r\n    }\r\n\r\n    // licenseExpired = () => {\r\n    //     if (!this.state.isLicenseActive){\r\n    //         this.props.history.push(\"/license_expired\");\r\n    //     }\r\n    // }\r\n\r\n    toggleChange30 = () => {\r\n        this.setState({\r\n          wait30second: !this.state.wait30second,\r\n        });\r\n    };\r\n\r\n    checkStatus = () => {\r\n        let status = localStorage.getItem('inProcess');\r\n        if(status !== null) {\r\n            status = status === 'true';\r\n            if(this.state.status !== status) {\r\n                this.setState({status: status});\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    checkCurrentUserProfileSelect = () => {\r\n        let profile = JSON.parse(localStorage.getItem('userProfile'));\r\n        if(profile !== null) {\r\n            let name = profile.profileName;\r\n            let login = profile.login;\r\n            if(login === this.state.login) {\r\n                let index = this.state.names.indexOf(name);\r\n                this.profileSelect.current.selectedIndex = index + 1;\r\n                this.setState(()=>({userProfileName: name, profileName: name}), ()=> {\r\n                    this.setState({userProfileReady: true});\r\n                });\r\n                let started = localStorage.getItem('inProcess');\r\n                if(started !== null) {\r\n                    let start = started === 'true';\r\n                    this.setState({started: start});\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    getFbTools = () => {\r\n        const url = '/index.html#facebook';\r\n        window.open(url, '_self');\r\n    };\r\n\r\n    toGeoSettings = () => {\r\n        const url = '/index.html#geosettings';\r\n        window.open(url, '_self');\r\n    };\r\n\r\n    toProxySettings = () => {\r\n        const url = '/index.html#proxysettings';\r\n        window.open(url, '_self');\r\n    };\r\n\r\n    toBackgroundMessage = (object) => {\r\n        chrome.runtime.sendMessage(object,\r\n        function (response) {});\r\n    }\r\n\r\n    becomeUserProfile = () => {\r\n\r\n        this.setState({profileReady: false}); \r\n\r\n        axios.post(process.env.REACT_APP_PUBLIC_API + '/api/get_current_user_profile', {\r\n            'login': this.state.login,\r\n            'profileName': this.state.userProfileName,\r\n        }, {headers: {\r\n                'Authorization' : this.state.authString,\r\n            }}).then(async (res)=> {\r\n                let d = res.data[0];\r\n                let isProfileNew = this.checkProfileHash(JSON.stringify(d));\r\n                if(isProfileNew) {\r\n                d.method = 'messageBecomeUserProfile';\r\n                await this.toBackgroundMessage(d);\r\n\r\n                    this.setState( ()=> ({currentUserProfile: d, profileName: d.profileName}), ()=> {\r\n                        this.start();\r\n                    });\r\n\r\n                }\r\n\r\n            })\r\n    };\r\n\r\n    checkProfileHash = (str) => {\r\n        let oldHash = localStorage.getItem('profileHash');\r\n        const hash = crypto.createHash('sha256');\r\n        hash.update(str);\r\n        let hashStr = hash.digest('hex');\r\n        if(oldHash !== hashStr) {\r\n            localStorage.setItem('profileHash', hashStr);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }    \r\n\r\n    becomeAllUserProfiles = () => {\r\n\r\n        axios.post(process.env.REACT_APP_PUBLIC_API + '/api/get_all_user_profiles', {\r\n            'login': this.state.login,\r\n        }, {headers: {\r\n                'Authorization' : this.state.authString,\r\n            }}).then((res)=> {\r\n                let names = [];\r\n                res.data.forEach((item)=> {\r\n                    if(item.profileName !== undefined) {\r\n                        names.push(item.profileName)\r\n                    }\r\n                });\r\n            this.setState(()=>({userProfileInfo: res.data, names: names, profilesLoaded: true}), ()=> {\r\n            });\r\n\r\n        }).catch((err)=> {\r\n            this.setState({profilesLoaded: false})\r\n        })\r\n    };\r\n\r\n    saveSession = () => {\r\n        if (JSON.parse(localStorage.getItem('userProfile')) !== null) {\r\n            var toBackgroundMessage = {};\r\n            toBackgroundMessage.method = 'messageSaveSession';\r\n            chrome.runtime.sendMessage(toBackgroundMessage, function (response) {\r\n            });\r\n        }        \r\n    }    \r\n\r\n\r\n    changeForm = (e) => {\r\n        let id = e.currentTarget.id;\r\n        let value = e.currentTarget.value;\r\n\r\n        switch (id) {\r\n            case \"users-profiles\":\r\n                this.setState(()=>({userProfileName: value}), ()=> {\r\n                    let ready = value !== '';\r\n                    this.setState({userProfileReady: ready})\r\n                });\r\n                break;\r\n            default:\r\n            break;\r\n        }\r\n    };\r\n\r\n    start = () => {\r\n        this.setState({started: true});\r\n        localStorage.setItem('started', 'true');\r\n        localStorage.setItem('inProcess', 'false');\r\n    };\r\n\r\n    stop = () => {\r\n        this.setState({started: false});\r\n        localStorage.setItem('started', 'false');\r\n        var toBackgroundMessage = {};\r\n        toBackgroundMessage.method = 'messageStopSession';\r\n        chrome.runtime.sendMessage(toBackgroundMessage, function (response) {});        \r\n    };\r\n\r\n    onEnterAezakmi = (e) => {\r\n        e.preventDefault();\r\n        if(e.key === \"Enter\" && this.state.userProfileReady) {\r\n            this.becomeUserProfile();\r\n        }\r\n    };\r\n\r\n    onKey = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    accessManageProfileFiles = () => {\r\n        if (this.state.licenseType == 'passenger' || this.state.licenseType == 'betting') {\r\n            this.setState({accessManageProfileFilesState: false});\r\n        }\r\n        if (this.state.licenseType == 'grovestreet' || this.state.licenseType == 'cj' || this.state.licenseType == 'ballas'){\r\n            this.setState({accessManageProfileFilesState: true});\r\n        }\r\n    }\r\n\r\n    importCookie(){\r\n        const url = '/index.html#uploadcookie';\r\n        window.open(url, '_blank');\r\n    }    \r\n \r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Header login = {this.state.login} />\r\n                            <h4  className={'text-center'}>Select Profile</h4>\r\n                            <Row className= \"justify-content-center\">\r\n                            <Alert key=\"warning\" variant=\"warning\">\r\n                                <span>Status: {!this.state.profilesLoaded ? <span className=\"text-danger\">server is unavailable</span>\r\n                                    : this.state.started && this.state.status ? <span className=\"text-success\">Started</span> :\r\n                                    this.state.started && !this.state.status ? <span className=\"text-success\">Loading...</span> :\r\n                                        <span className=\"text-danger\">Stopped</span>}{!this.state.profilesLoaded ? \"\" :\r\n                                    this.state.started && this.state.status ? ` with ${this.state.profileName}`:\r\n                                    ''}</span> </Alert>\r\n                                    <Alert className={this.state.isLicenseActive ? \"d-none\" : \"\"} key=\"warning\" variant=\"warning\">\r\n                                    <span> Your License Expired! </span>\r\n                                    </Alert>\r\n                                    \r\n                                <Col md = {4}>\r\n                                    <Form.Control autoFocus={true}\r\n                                                  onKeyPress={(e)=> this.onEnterAezakmi(e)}\r\n                                                  ref = {this.profileSelect}\r\n                                                  style={{width: \"60%\", display: \"inline\"}}\r\n                                                  className = 'prof-select' value={this.state.userProfileName}\r\n                                                  id='users-profiles' as=\"select\" onChange={this.changeForm}>\r\n                                        <option>{this.state.userProfileInfo.length === 0 && this.state.profilesLoaded ? '!!!You have no profiles!!!' : ''}</option>\r\n                                        {this.state.userProfileInfo.length !== 0 ?\r\n                                            this.state.names.map((item) => <option>{item}</option>)\r\n                                            : null}\r\n                                    </Form.Control>\r\n                                    <Button onClick = {this.toGeoSettings} style={{marginLeft: \"5%\"}} variant={'secondary'}><i className=\"material-icons\" style = {{color: \"black\"}}>translate</i></Button>\r\n                                    <Button onClick = {this.toProxySettings} style={{marginLeft: \"5%\"}} variant={'secondary'}><i className=\"material-icons\" style = {{color: \"black\"}}>wifi</i></Button>\r\n                                    <Button variant={'success'} onKeyPress={(e)=> this.onEnterAezakmi(e)}  block disabled = {!this.state.userProfileReady} onClick = {this.becomeUserProfile}>A-E-Z-A-K-M-I</Button>\r\n                                    \r\n                                    <Button variant={'danger'} disabled = {!this.state.userProfileReady} style={{marginTop: 20, float: 'left', width: '160px'}} onClick = {this.stop}>Stop</Button>\r\n                                    <Button target=\"_blank\" variant={'info'} style={{marginTop: 20, marginLeft: 15, float: 'right', width: '140px'}} href=\"/index.html#aezakmi\">Dashboard</Button>\r\n                                    \r\n                                    <Button target=\"_blank\" className={!this.state.accessManageProfileFilesState ? \"d-none\" : \"\"} href=\"/index.html#saveprofile\" style={{marginTop: 20, float: 'left', width: '160px'}} variant=\"dark\">Save Profile File</Button>\r\n                                    <Button target=\"_blank\" className={!this.state.accessManageProfileFilesState ? \"d-none\" : \"btn btn-dark\"} style={{marginTop: 20, marginLeft: 15, float: 'right', width: '140px'}} href=\"/index.html#upload\"> Upload Profile </Button>\r\n\r\n                                    \r\n\r\n                                    <Button target=\"_blank\" style={{marginTop: 40, marginBottom: 20, float: \"left\", width: '160px'}} href=\"http://account.aezakmi.run\" variant=\"dark\">Create New Profile</Button>\r\n\r\n                                    \r\n                                    <div className={this.state.licenseType == 'betting' ? \"d-none\" : \"\"} style={{marginTop: 40, marginBottom: 20, marginLeft: 15, float: 'right', width: '140px'}}>\r\n                                        <img style={{marginLeft: 15}} src={this.state.edithtiscookie_ico} onMouseEnter={() => {this.setState({edithtiscookie_ico: \"editthiscookie_over.png\"});}} onMouseOut={() => {this.setState({edithtiscookie_ico: \"editthiscookie.png\"});}} title=\"Import Cookies\" onClick = {this.importCookie}/>\r\n                                        <img style={{marginLeft: 40}} src={this.state.facebooktoken_ico} onMouseEnter={() => {this.setState({facebooktoken_ico: \"fb-mechanikus_hower.png\"});}} onMouseOut={() => {this.setState({facebooktoken_ico: \"fb-mechanikus.png\"});}} title=\"Facebook Tools\" onClick = {this.getFbTools}/>\r\n                                    </div>\r\n          \r\n                                </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(withRouter(Dashboard));\r\n","/*global chrome*/\r\n\r\nimport {withRouter} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Form, Button, Card, Alert} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\n\r\n\r\n\r\nclass AuthForm extends Component {\r\n    state = {\r\n        login: '',\r\n        password: '',\r\n        chPassword: true,\r\n        chLogin: true,\r\n        auth: false,\r\n        firstStart: true,\r\n        resMessage: '',\r\n        lastSession: false,\r\n        restoreStatus: false,\r\n    };\r\n\r\n    changeInputs = (e) => {\r\n        let id = e.currentTarget.id;\r\n        let value = e.currentTarget.value;\r\n        switch (id) {\r\n            case 'login':\r\n                this.setState({login: value});\r\n                break;\r\n            case 'password':\r\n                this.setState({password: value});\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        let authString = this.props.cookies.get('auth');\r\n\r\n        if(authString !== undefined) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n        else {\r\n            this.props.history.push(\"/auth\");\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.lastSessionCheck();\r\n    }\r\n\r\n    onLogin = (e) => {\r\n        const form = e.currentTarget;\r\n        axios.post(process.env.REACT_APP_PUBLIC_API + '/api/auth', {\r\n            'login': this.state.login,\r\n            'password': this.state.password,\r\n        }).then((res)=> {\r\n            e.preventDefault();\r\n                this.setState(()=> ({\r\n                    chPassword: res.data.password,\r\n                        chLogin: res.data.login,\r\n                        auth: res.data.done,\r\n                    resMessage: res.data.message,\r\n                    firstStart: false,\r\n                }), ()=> {\r\n\r\n                    form.checkValidity();\r\n                    if(this.state.auth) {\r\n                        localStorage.setItem('started', 'false');\r\n                        localStorage.setItem('inProcess', 'false');\r\n                        localStorage.setItem('profileHash', '');\r\n                        this.props.cookies.set('auth', res.data.auth, {path: '/'});\r\n                        localStorage.setItem('datetime', res.data.auth);\r\n                        this.props.cookies.set('login', this.state.login, {path: '/'});\r\n                        localStorage.setItem('login', this.state.login);\r\n                        this.props.history.push(\"/dashboard\");\r\n                    }\r\n                })\r\n\r\n\r\n        }).catch((err)=> {\r\n            this.setState({auth: false, resMessage: 'server is unavailable', firstStart: false});\r\n        })\r\n    };\r\n\r\n    onEnterLogin = (e) => {\r\n        if(e.key === \"Enter\") {\r\n            this.onLogin(e);\r\n        }\r\n    };\r\n\r\n// Only for MacOS\r\n\r\n    lastSessionCheck = () => {\r\n        if (JSON.parse(localStorage.getItem('userProfile')) !== null) {\r\n            var id = JSON.parse(localStorage.getItem('userProfile')).profileName.replace(/ /g, \"_\");\r\n\r\n            if(localStorage.getItem('session-' + id) == 'TWljcm8gYWN0aXZpdHkgYW5kIG1hY3JvIGNvbnNlZ3VlbmNlcy4gQWdvcmlzdHM6IGNvdW50ZXItZWNvbm9taXN0cyB3aXRoIGxpYmVydGFyaWFuIApjb25zY2lvdXNuZXNzLiBUaGUgcHVycG9zZSBvZiAiRXN0YWJsaXNobWVudCIgZWNvbm9taWNzLiBTdGVwIGJ5IHN0ZXAgYmFja3dhcmQgZnJvbSAKYWdvcmlzbSB0byBzdGF0aXNtIChmb3IgdGhlb3JldGljYWwgcHVycG9zZXMpLiBCbGFjayBhbmQgZ3JleSBtYXJrZXRzOiB0aGUgdW5jb25zY2lvdXMgYWdvcmEuIAoiVGhpcmQsIiAiU2Vjb25kLCIgYW5kICJGaXJzdCIgV29ybGQgQ291bnRlci1FY29ub21pYyBzdGF0dXMgYW5kIGdyb3NzZXN0IGV4YW1wbGVzLiAKQ291bnRlci1FY29ub21pY3MgaW4gYWxsIGZpZWxkcyBvZiBjb21tZXJjZSBldmVuIGluIE5vcnRoIEFtZXJpY2EsIHNvbWUgZXhjbHVzaXZlbHkgCmNvdW50ZXItZWNvbm9taWMuIFVuaXZlcnNhbGl0eSBvZiBDb3VudGVyLUVjb25vbWljcyBhbmQgcmVhc29ucyBmb3IgaXQuIExpbWl0YXRpb24gb2YgCmNvdW50ZXItIGVjb25vbWljcyBhbmQgcmVhc29ucy4gVGhlIHJvbGUgb2YgdGhlIGludGVsbGlnZW50c2lhIGFuZCBFc3RhYmxpc2htZW50IG1lZGlhLiAKRmFpbHVyZSBvZiBjb3VudGVyLWN1bHR1cmVzIGFuZCB0aGUga2V5IHRvIHN1Y2Nlc3MuIFN0ZXBzIGZyb20gc3RhdGlzbSB0byBhZ29yaXNtIGFuZCB0aGUgcmlzayAKb2YgbWFya2V0IHByb3RlY3Rpb24uIFRoZSBmdW5kYW1lbnRhbCBwcmluY2lwbGUgb2YgY291bnRlci1lY29ub21pY3MuIFRoZSByZWFzb24gZm9yIAppbmV2aXRhYmxlIGdyb3d0aCBvZiBhZ29yaXN0IGNvdW50ZXItIGVjb25vbWljIHN1Yi1zb2NpZXR5LiA=') {\r\n                this.setState({ lastSession: true });\r\n            } else {\r\n                this.setState({ lastSession: false });\r\n            }\r\n        } else {\r\n                this.setState({ lastSession: false });\r\n        }\r\n    }\r\n\r\n    restoreSession = () => {\r\n        if (this.state.lastSession) {\r\n            var toBackgroundMessage = {};\r\n            toBackgroundMessage.method = 'messageRestoreSession';\r\n            chrome.runtime.sendMessage(toBackgroundMessage, function (response) {\r\n            });\r\n                this.setState({ restoreStatus: true });\r\n                var id = JSON.parse(localStorage.getItem('userProfile')).profileName.replace(/ /g, \"_\");\r\n                var datetime = localStorage.getItem('datetime');\r\n                var cur_login = localStorage.getItem('login');\r\n                this.props.cookies.set('auth', datetime, {path: '/'});\r\n                this.props.cookies.set('login', cur_login, {path: '/'});\r\n                this.props.history.push(\"/dashboard\");\r\n\r\n        }        \r\n    }\r\n// __end Only for MacOS\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n               <Row className = 'justify-content-center' style={{marginTop: 50}}>\r\n\r\n                <Form noValidate validated={!this.state.firstStart ? this.state.auth : false}>\r\n\r\n                    <Form.Group>\r\n\r\n                        <p className = 'text-center'>Login</p>\r\n\r\n                        <Form.Control onKeyPress={(e)=> this.onEnterLogin(e)} required isInvalid = {!this.state.firstStart ? !this.state.auth : false} onChange = {this.changeInputs} value = {this.state.login} id = 'login' type=\"text\" />\r\n                        \r\n                        <p className = 'text-center'>Password</p>\r\n\r\n                        <Form.Control onKeyPress={(e)=> this.onEnterLogin(e)} required isInvalid = {!this.state.firstStart ? !this.state.auth : false} onChange = {this.changeInputs} value = {this.state.password} id = 'password' type=\"password\" />\r\n\r\n                        <Form.Control.Feedback className = 'text-center' type=\"invalid\">\r\n                            <span >{this.state.resMessage}</span>\r\n                        </Form.Control.Feedback>\r\n\r\n                        <Button onClick = {this.onLogin} block >Log in</Button>\r\n\r\n                        <Button variant={'success'} block disabled = {!this.state.lastSession} onClick = {this.restoreSession}>Restore Session</Button>\r\n                        \r\n                        {this.state.restoreStatus ? \r\n                            <Alert key=\"warning\" variant=\"warning\">\r\n                                <span>\r\n                                    <span className=\"text-success\">Cheat enabled</span>\r\n                                </span>\r\n                            </Alert> : ''}\r\n\r\n                        \r\n\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n               </Row>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withCookies(withRouter(AuthForm));","/*global chrome*/\r\nimport {withRouter} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Form, Button, Card, Alert} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\n\r\nclass UploadProfile extends Component {\r\n\ttmr;\r\n    \tstate = {\r\n            uploadStatus: false,\r\n            profileName: '',\r\n            authString: '',\r\n            login:'',\r\n        };\r\n\r\n\r\n    componentWillMount() {\r\n       let authString = this.props.cookies.get('auth');\r\n       if(authString !== undefined) {\r\n           let login = this.props.cookies.get('login');\r\n           this.setState({authString: authString, login: login});\r\n       }\r\n       else {\r\n           this.props.history.push(\"/auth\");\r\n       }\r\n\r\n    }    \r\n\r\n\r\n    UploadProfileFromFile = () => {\r\n\r\n        // console.log('----------');\r\n        // console.log('UploadProfileFromFile ON');\r\n        // var timerAe = Math.floor(new Date().valueOf());\r\n         \r\n\r\n        let fileReader;\r\n        const handleFileRead = (e) => {\r\n            const content = fileReader.result;\r\n            this.AfterUploadProfileFromFile(content);\r\n        };\r\n                \r\n        const handleFileChosen = (file) => {\r\n            fileReader = new FileReader();\r\n            fileReader.onloadend = handleFileRead;\r\n            fileReader.readAsText(file);\r\n        };\r\n\r\n        // console.log('UploadProfileFromFile OFF')\r\n        // timerAe = Math.floor(new Date().valueOf()) - timerAe;\r\n        // console.log('work time: ' + timerAe + ' milisecond')\r\n        // timerAe = Math.floor(new Date().valueOf())\r\n        \r\n\r\n        return <input type='file'\r\n                      id='file'\r\n                      style={{position: 'fixed', bottom: 0, left: 0, opacity: 0, width: 0, height: 0}}\r\n                      accept='.aezakmi'\r\n                      onChange={e => handleFileChosen(e.target.files[0])}                  \r\n                />      \r\n    };\r\n\r\n    UploadToBackground = async (object, string, boolean) => {\r\n        // console.log('----------');\r\n        // console.log('UploadToBackground ON');\r\n        // console.log(object);\r\n        // console.log(string);\r\n        // var timerAe = Math.floor(new Date().valueOf());\r\n        \r\n\r\n        var toBackgroundMessage = object;\r\n        toBackgroundMessage.method = 'messageUploadProfile';\r\n        toBackgroundMessage.importedUserProfile = string;\r\n        toBackgroundMessage.itIsNewProfile = boolean;\r\n\r\n        // console.log('toBackgroundMessage: ');\r\n        // console.log(toBackgroundMessage);\r\n\r\n        await chrome.runtime.sendMessage(toBackgroundMessage, function (response) {});\r\n        this.setState({\r\n            uploadStatus: true,\r\n            profileName: string});\r\n\r\n        // console.log('UploadToBackground OFF');\r\n        // timerAe = Math.floor(new Date().valueOf()) - timerAe;\r\n        // console.log('work time: ' + timerAe + ' milisecond')\r\n        // timerAe = Math.floor(new Date().valueOf())\r\n                                              \r\n\r\n    }\r\n\r\n    randomInteger = (min, max) => {\r\n      // случайное число от min до (max+1)\r\n      let rand = min + Math.random() * (max + 1 - min);\r\n      return Math.floor(rand);\r\n    }\r\n\r\n\r\n\r\n    AfterUploadProfileFromFile = async (object) => {\r\n        // console.log('----------');\r\n        // console.log('UploadProfileFromFile ON');\r\n        // var timerAe = Math.floor(new Date().valueOf());\r\n        \r\n\r\n        var profileData = JSON.parse(atob(object));\r\n        // console.log(profileData)\r\n        var userProfile = JSON.parse(profileData['userProfile']);\r\n        // console.log(userProfile)\r\n        var userProfileName = userProfile['profileName'];\r\n        // console.log(userProfileName)\r\n        if (userProfile.login !== this.state.login) {\r\n            userProfile.login = this.state.login;\r\n            let random = this.randomInteger(100, 999)\r\n            userProfile.profileName = userProfile.profileName + '_imported_' + random;\r\n        }\r\n        delete userProfile._id;\r\n\r\n        //Callback HELL start\r\n        axios.post(process.env.REACT_APP_PUBLIC_API + '/api/get_current_user_profile', {\r\n            'login': this.state.login,\r\n            'profileName': userProfileName,\r\n        }, {headers: {'Authorization' : this.state.authString}}).then(async (res)=> {\r\n                // console.log(res);\r\n                //TODO наверняка узнавать есть ли на сервере профиль с выбранным именем\r\n                if (res.data.length == 0) {\r\n                    axios.post(process.env.REACT_APP_PUBLIC_API + '/api/save_user_profile', {\r\n                        'userProfile': userProfile,\r\n                    }, {headers: {'Authorization' : this.state.authString}}).then(async (res)=> {\r\n                        // console.log('SEND save_user_profile')\r\n                        this.UploadToBackground(profileData, userProfile.profileName, true);\r\n\r\n                            // console.log('UploadProfileFromFile OFF');\r\n                            // timerAe = Math.floor(new Date().valueOf()) - timerAe;\r\n                            // console.log('work time: ' + timerAe + ' milisecond')\r\n                            // timerAe = Math.floor(new Date().valueOf())\r\n                                                      \r\n                    }) \r\n                } else {\r\n                    this.UploadToBackground(profileData, userProfileName, false);\r\n                            // console.log('DO NOT SEND save_user_profile')\r\n                            // console.log('UploadProfileFromFile OFF');\r\n                            // timerAe = Math.floor(new Date().valueOf()) - timerAe;\r\n                            // console.log('work time: ' + timerAe + ' milisecond')\r\n                            // timerAe = Math.floor(new Date().valueOf())\r\n                                                   \r\n                }                      \r\n            })        \r\n               \r\n\r\n    };               \r\n\r\n    render() {\r\n        return(\r\n        \t<div className=\"bg\">\r\n\t\t        <Modal show={true}>\r\n\t\t\t        <Modal.Header>\r\n\t\t\t          <Modal.Title>Upload Profile File</Modal.Title>\r\n\t\t\t        </Modal.Header>\r\n\r\n\t\t        \t<Modal.Body>\r\n\t\t        \t\tSelect your profile file.\r\n\t\t        \t\t<Alert key=\"warning\" variant=\"warning\">\r\n                            <span>Status: {this.state.uploadStatus ? <span className=\"text-success\">Success upload profile</span> : <span className=\"text-danger\">Not files to upload</span>}\r\n                            {this.state.profileName != '' ? ` with ${this.state.profileName} name`: ''}</span> \r\n                        </Alert>\r\n\t\t        \t\t<label for=\"file\" block className=\"btn btn-dark\">Upload Profile File</label>\r\n\t\t\t\t\t\t{this.UploadProfileFromFile()}\r\n\t\t        \t</Modal.Body>\r\n\r\n\t\t\t        <Modal.Footer>\r\n\t\t\t        </Modal.Footer>\r\n\t\t      \t</Modal>\r\n        \t</div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withCookies(withRouter(UploadProfile));\r\n","/*global chrome*/\r\nimport {withRouter} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Form, Button, Card, Alert} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\n\r\nclass SaveProfile extends Component {\r\n  tmr;\r\n\tstate = {\r\n        profileName: '',\r\n        saveProfileUrl: '',\r\n        readySave: false,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.tmr = setInterval(this.saveProfileFile,3000);\r\n    };\r\n\r\n    save_cookies = (id) => {\r\n      chrome.cookies.getAll({}, (cookies)=> {\r\n        let i = cookies.length;\r\n        while ( i-- ) {\r\n          delete cookies[i]['session'];\r\n          delete cookies[i]['hostOnly'];\r\n          delete cookies[i]['httpOnly'];\r\n            if (cookies[i]['domain'] == 'account.aezakmi.run') {\r\n              delete cookies[i];\r\n            }          \r\n        }\r\n\r\n        localStorage.setItem('cookies-' + id, JSON.stringify(cookies));\r\n      })\r\n    };\r\n\r\n    save_history = (id) => {\r\n        chrome.history.search({text: ''}, (history)=> {\r\n            let i = history.length;\r\n            while ( i-- ) {\r\n              delete history[i]['id'];\r\n              delete history[i]['lastVisitTime'];\r\n              delete history[i]['title'];\r\n              delete history[i]['typedCount'];\r\n              delete history[i]['visitCount'];\r\n            }  \r\n            localStorage.setItem('history-' + id, JSON.stringify(history));\r\n        })\r\n    };\r\n\r\n    save_activeTabs = (id) => {\r\n  \t\tchrome.tabs.query({}, function (savetabs) {\r\n  \t\t\tvar vkladki = {};\r\n  \t\t\tvar taburls = {};\r\n  \t\t\tvar i = 0;\r\n  \t\t    savetabs.forEach((savetab)=>{\r\n  \t\t        vkladki[i] = savetab;\r\n  \t\t        taburls[i] = vkladki[i].url\r\n  \t\t        i = i+1;\r\n  \t\t    })\r\n  \t\t    localStorage.setItem('activeTabs-' + id, JSON.stringify(taburls));\r\n  \t\t});\r\n\t  };\r\n\r\n    pauser = (timems) => {\r\n      function lol() {\r\n        let adas = 1;\r\n      }\r\n      setTimeout(lol, timems);\r\n    }\r\n\r\n    saveProfileFile = async () => {\r\n        this.setState({profileName: JSON.parse(localStorage.getItem('userProfile')).profileName})\r\n        if (JSON.parse(localStorage.getItem('userProfile')) !== null) {\r\n            let currentFingerprintNameForSaveUserData = JSON.parse(localStorage.getItem('userProfile')).profileName.replace(/ /g, \"_\");\r\n            await this.save_history(currentFingerprintNameForSaveUserData);\r\n            await this.save_cookies(currentFingerprintNameForSaveUserData);\r\n            await this.save_activeTabs(currentFingerprintNameForSaveUserData);\r\n        }        \r\n\r\n        var archive = {},\r\n            keys = Object.keys(localStorage),\r\n            i = keys.length;\r\n\r\n        while ( i-- ) {\r\n            archive[ keys[i] ] = localStorage.getItem( keys[i] );\r\n        }\r\n\r\n\r\n        var currentLocalStorage = {};\r\n        currentLocalStorage.userProfile = archive.userProfile;\r\n\r\n\r\n        currentLocalStorage['activeTabs-' + this.state.profileName.replace(/ /g, \"_\")] = archive['activeTabs-' + this.state.profileName.replace(/ /g, \"_\")];\r\n        currentLocalStorage['history-' + this.state.profileName.replace(/ /g, \"_\")] = archive['history-' + this.state.profileName.replace(/ /g, \"_\")];\r\n        currentLocalStorage['cookies-' + this.state.profileName.replace(/ /g, \"_\")] = archive['cookies-' + this.state.profileName.replace(/ /g, \"_\")];\r\n        currentLocalStorage['started'] = archive['started'];\r\n        currentLocalStorage['inProcess'] = archive['inProcess'];\r\n        currentLocalStorage['profileHash'] = archive['profileHash'];\r\n\r\n\r\n        var savedProfileName = JSON.parse(currentLocalStorage.userProfile).profileName.replace(/ /g, \"_\");\r\n\r\n\r\n        if (currentLocalStorage['cookies-' + savedProfileName] !== null && currentLocalStorage['history-' + savedProfileName] !== null && currentLocalStorage['activeTabs-' + savedProfileName] !== null  ) {\r\n          await this.pauser(10000)\r\n          this.setState({readySave: true});\r\n        } else {\r\n          this.setState({readySave: false});\r\n        }\r\n        var encodedLocalStorageOne = btoa(JSON.stringify(currentLocalStorage));\r\n        var encodedLocalStorage = btoa(encodedLocalStorageOne);\r\n        var declLink = \"data:application/octet-stream;charset=utf-16le;base64,\"\r\n        this.setState({saveProfileUrl: declLink + encodedLocalStorage});\r\n\r\n    };\r\n   \r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n        \t<div className=\"bg\">\r\n\t\t        <Modal show={true}>\r\n\t\t\t        <Modal.Header>\r\n\t\t\t          <Modal.Title>Save Profile File</Modal.Title>\r\n\t\t\t        </Modal.Header>\r\n\r\n\t\t        \t<Modal.Body>\r\n              {this.state.readySave ? <Button target=\"_blank\" download={this.state.profileName + '-profile.aezakmi'} href={this.state.saveProfileUrl} variant=\"dark\">Download</Button> : <Button variant=\"dark\">WAIT...</Button> }\r\n                              \r\n\t\t        \t</Modal.Body>\r\n\r\n\t\t\t        <Modal.Footer>\r\n\t\t\t        </Modal.Footer>\r\n\t\t      \t</Modal>\r\n        \t</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withCookies(withRouter(SaveProfile));\r\n","/*global chrome*/\r\nimport {withRouter} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Form, Button, Card, Alert} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\n\r\nclass UploadCookie extends Component {\r\n  tmr;\r\n        state = {\r\n            uploadStatus: false,\r\n            profileName: '',\r\n            authString: '',\r\n            login:'',\r\n            cookies_textarea: '',\r\n            pos: Number,\r\n            facebookData: false,\r\n            fbdata: [],\r\n            fileName: ''\r\n        };    \r\n    constructor(props) {\r\n        super(props);    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n       let authString = this.props.cookies.get('auth');\r\n       if(authString !== undefined) {\r\n           let login = this.props.cookies.get('login');\r\n           this.setState({authString: authString, login: login});\r\n       }\r\n       else {\r\n           this.props.history.push(\"/auth\");\r\n       }\r\n       this.GetFBFromLocalStorage();\r\n\r\n    }  \r\n\r\n    GetFBFromLocalStorage = () => {\r\n\r\n      if (localStorage.getItem('facebookData') !== null ) {\r\n        this.setState({facebookData: true})\r\n        var comma = ',';\r\n        var facebook_array = this.splitString(localStorage.getItem('facebookData'), comma);\r\n        this.setState({fbdata: facebook_array})\r\n      }\r\n      \r\n    } \r\n\r\n      splitString = (stringToSplit, separator) => {\r\n        var arrayOfStrings = stringToSplit.split(separator);\r\n        return arrayOfStrings;\r\n      }\r\n\r\n      handleChange = (event) => {\r\n        this.setState({cookies_textarea: event.target.value});\r\n      }\r\n\r\n      handleSubmit = (event) => {\r\n        this.AfterUploadCookieFromFile(this.state.cookies_textarea);\r\n        event.preventDefault();\r\n      }\r\n\r\n    UploadCookieFromFile = () => {         \r\n        let fileReader;\r\n        const handleFileRead = (e) => {\r\n            const content = fileReader.result;\r\n            this.AfterUploadCookieFromFile(content);\r\n        };\r\n                \r\n        const handleFileChosen = (file) => {\r\n            fileReader = new FileReader();\r\n            fileReader.onloadend = handleFileRead;\r\n            fileReader.readAsText(file);\r\n            this.setState({fileName: file.name});\r\n        };\r\n\r\n        \r\n\r\n        return <input type='file'\r\n                      id='file'\r\n                      style={{position: 'fixed', bottom: 0, left: 0, opacity: 0, width: 0, height: 0}}\r\n                      onChange={e => handleFileChosen(e.target.files[0])}                  \r\n                />      \r\n    };\r\n\r\n    UploadToBackground = async (object, string) => {\r\n        var toBackgroundMessage = {};        \r\n        toBackgroundMessage.data = object;\r\n        toBackgroundMessage.method = string;\r\n\r\n        await chrome.runtime.sendMessage(toBackgroundMessage, function (response) {});\r\n        this.setState({uploadStatus: true});\r\n                                              \r\n    };    \r\n\r\n    AfterUploadCookieFromFile = async (object) => {\r\n    \r\n        var noname_file = object,\r\n        substring = \".aezakmi\";\r\n        console.log(this.state.fileName)\r\n        if (this.state.fileName.includes(substring)) {\r\n            this.UploadToBackground(object, 'messageUploadFacebook');           \r\n        } else {\r\n            this.UploadToBackground(object, 'messageUploadCookie');\r\n        }                            \r\n    };\r\n\r\n    caesar = (UserText) => {\r\n      var TextToWork = UserText.replace('AEZAKMI|','');\r\n      var result = this.decrypt(TextToWork);\r\n      result = atob(result);\r\n      return result;\r\n    };\r\n\r\n    decrypt = (text) => {\r\n        var OtherSymbols = [' ',',','.',':',';','!','?','-','_','=','+','(',')','[',']','@','`',\"'\",'\"','<','>','|','/','%','$','^','&','*','~'];\r\n        var Numbers = ['0','1','2','3','4','5','6','7','8','9'];\r\n        var EngAlfUp = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\r\n        var EngAlfLower = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\r\n        var NumbersEncrypt = ['0','1','2','3','4','5','6','7','8','9'];\r\n        var EngAlfUpEncrypt = ['D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','A','B','C'];\r\n        var EngAlfLowerEncrypt = ['d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','a','b','c'];\r\n        var result = '';\r\n        \r\n      for (var i = 0; i <= text.length; i++) {\r\n        var symbol = text[i];\r\n        if (this.contains(symbol, OtherSymbols)) {\r\n          result += symbol;\r\n        }\r\n        if (this.contains(symbol, NumbersEncrypt)) {\r\n          symbol = Numbers[this.state.pos];\r\n          result += symbol;\r\n        }\r\n        if (this.contains(symbol, EngAlfUpEncrypt)) {\r\n            symbol = EngAlfUp[this.state.pos];\r\n            result += symbol;\r\n        }\r\n        if ((this.contains(symbol, EngAlfLowerEncrypt))) {\r\n            symbol = EngAlfLower[this.state.pos];\r\n            result += symbol;\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n  contains = (symb, arr) => {\r\n    var letter = symb;\r\n    this.setState({pos: 0});\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (letter === arr[i]) {\r\n        this.setState({pos: i});\r\n        return true;\r\n        break;\r\n      }\r\n    }\r\n  };               \r\n\r\n    render() {\r\n        return(\r\n          <div className=\"bg\">\r\n            <Modal show={true}>\r\n              <Modal.Header>\r\n                <Modal.Title>Upload Cookie File</Modal.Title>\r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                Select your Cookie file.\r\n                <Alert key=\"warning\" variant=\"warning\">\r\n                            <span>Status: {this.state.uploadStatus ? <span className=\"text-success\">Success upload cookie</span> : <span className=\"text-danger\">Not files to upload</span>}\r\n                            {this.state.profileName != '' ? ` with ${this.state.profileName} name`: ''}</span> \r\n                        </Alert>\r\n                <label for=\"file\" block className=\"btn btn-dark\">Upload Cookie File</label>\r\n            {this.UploadCookieFromFile()}\r\n\r\n                        <br /> OR <br />\r\n                        Paste your Cookies here:\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label style={{height: '60%', width: '90%'}}>\r\n                              <textarea style={{height: '200px', width: '100%'}}  onChange={this.handleChange} />\r\n                            </label>\r\n                            <input type=\"submit\" id='cookies_text' value=\"Import Cookies\" />\r\n                        </form> \r\n                        <Alert className={!this.state.facebookData ? \"d-none\" : \"\"} key=\"warning\" variant=\"warning\">\r\n                          <span className=\"text-danger\">FUCKBOOK DATA: </span> <br />\r\n                          <span> {`${this.state.fbdata[0]}`} </span><br />\r\n                          <span> {`${this.state.fbdata[1]}`} </span><br />\r\n                          <span> {`${this.state.fbdata[2]}`} </span><br />\r\n                        </Alert>                     \r\n              </Modal.Body>\r\n\r\n              <Modal.Footer>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withCookies(withRouter(UploadCookie));","/*global chrome*/\r\nimport {withRouter} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Form, Button, Card, Alert, Table} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Header from './Header';\r\n\r\nconst crypto = require('crypto');\r\n\r\n\r\n\r\nclass Aezakmi extends Component {\r\n    tmr;\r\n    tmr2;\r\n    profileSelect = React.createRef();\r\n    state = {\r\n\r\n        profileName: '',\r\n        authString: '',\r\n        login:'',\r\n\r\n        currentUserProfile: {},\r\n        userProfileInfo: [],\r\n        userProfileReady: false,\r\n        profilesLoaded: true,\r\n\r\n        names: [],\r\n        namesWithCookies: [],\r\n        namesToRemove: [],\r\n\r\n        wait30second: false,\r\n        toRemoveTab: '',\r\n        fromBackground: {},\r\n        licenseType: '',\r\n        days: '',\r\n        isLicenseActive: true,\r\n        accessManageProfileFilesState: false,\r\n        proxyProfileName: \"\", \r\n        proxyStatus: null,\r\n\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n       let authString = this.props.cookies.get('auth');\r\n       if(authString !== undefined) {\r\n           let login = this.props.cookies.get('login');\r\n           this.setState({authString: authString, login: login});\r\n       }\r\n       else {\r\n           this.props.history.push(\"/auth\");\r\n       }\r\n       \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.becomeAllUserProfiles();\r\n        this.license();        \r\n    };   \r\n\r\n\r\n    localStorageCheck = (profileName) => {\r\n        var cookieCheck = localStorage.getItem('cookies-' + profileName);\r\n        if (cookieCheck === null) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    chekedProfiles = (profileName) => {        \r\n\r\n        let profiles = this.state.namesToRemove;\r\n\r\n        if (profiles.indexOf(profileName) !== -1) {\r\n            profiles.splice(profiles.indexOf(profileName), 1);\r\n            this.setState({namesToRemove: profiles})\r\n        } else {\r\n            profiles.push(profileName);\r\n            this.setState({namesToRemove: profiles})\r\n        }\r\n        console.log(this.state.namesToRemove)\r\n\r\n    }\r\n\r\n    removeProfiles = () => {\r\n        axios.post(process.env.REACT_APP_PUBLIC_API + '/api/remove_profiles', {login: this.state.login, profiles: this.state.namesToRemove}, {\r\n            headers: {\r\n                'Authorization': this.state.authString,\r\n            }\r\n        }).then(res => {\r\n            window.location.reload()\r\n        })        \r\n    }\r\n\r\n    license = async () => {\r\n        await axios.post(process.env.REACT_APP_PUBLIC_API + '/api/vashi_documenti', {login: this.state.login}, {\r\n            headers: {\r\n                'Authorization': this.state.authString,\r\n            }\r\n        }).then(res => {\r\n\r\n            this.setState({licenseType: res.data.license, days: res.data.days})\r\n            if (res.data.days = 0) {\r\n                this.setState({isLicenseActive: false})\r\n            }\r\n            if (res.data.days > 0) {\r\n                this.setState({isLicenseActive: true})\r\n            }\r\n        })\r\n\r\n        this.accessManageProfileFiles();       \r\n    }\r\n\r\n\r\n    toBackgroundMessage = (object) => {\r\n        chrome.runtime.sendMessage(object,\r\n        function (response) {});\r\n    }\r\n\r\n    becomeUserProfile = (profileName, e) => {\r\n        this.setState({profileReady: false}); \r\n\r\n        axios.post(process.env.REACT_APP_PUBLIC_API + '/api/get_current_user_profile', {\r\n            'login': this.state.login,\r\n            'profileName': profileName,\r\n        }, {headers: {\r\n                'Authorization' : this.state.authString,\r\n            }}).then(async (res)=> {\r\n                let d = res.data[0];\r\n                let isProfileNew = this.checkProfileHash(JSON.stringify(d));\r\n                if(isProfileNew) {\r\n                d.method = 'messageBecomeUserProfile';\r\n                await this.toBackgroundMessage(d);\r\n\r\n                    this.setState( ()=> ({currentUserProfile: d, profileName: d.profileName}), ()=> {\r\n                        this.start();\r\n                    });\r\n\r\n                }\r\n\r\n            })\r\n    };\r\n\r\n    checkProfileHash = (str) => {\r\n        let oldHash = localStorage.getItem('profileHash');\r\n        const hash = crypto.createHash('sha256');\r\n        hash.update(str);\r\n        let hashStr = hash.digest('hex');\r\n        if(oldHash !== hashStr) {\r\n            localStorage.setItem('profileHash', hashStr);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }    \r\n\r\n    becomeAllUserProfiles = () => {\r\n\r\n        axios.post(process.env.REACT_APP_PUBLIC_API + '/api/get_all_user_profiles_advanced', {\r\n            'login': this.state.login,\r\n        }, {headers: {\r\n                'Authorization' : this.state.authString,\r\n            }}).then((res)=> {\r\n                let names = [];\r\n                let namesWithCookies = [];\r\n                res.data.forEach((item)=> {\r\n                    if(item.profileName !== undefined) {                        \r\n                        if (this.localStorageCheck(item.profileName)) {\r\n                            namesWithCookies.push(item)\r\n                        } else {\r\n                            names.push(item)\r\n                        }\r\n                    }\r\n                });\r\n            this.setState({userProfileInfo: res.data, names: names, namesWithCookies: namesWithCookies, profilesLoaded: true});\r\n        }).catch((err)=> {\r\n            this.setState({profilesLoaded: false})\r\n        })\r\n    };\r\n  \r\n\r\n    start = () => {\r\n        this.setState({started: true});\r\n        localStorage.setItem('started', 'true');\r\n        localStorage.setItem('inProcess', 'false');\r\n    };\r\n\r\n\r\n    accessManageProfileFiles = () => {\r\n        if (this.state.licenseType == 'passenger' || this.state.licenseType == 'betting') {\r\n            this.setState({accessManageProfileFilesState: false});\r\n        }\r\n        if (this.state.licenseType == 'grovestreet' || this.state.licenseType == 'cj' || this.state.licenseType == 'ballas'){\r\n            this.setState({accessManageProfileFilesState: true});\r\n        }\r\n    }\r\n\r\n\r\n    proxyChecker = (profileName, proxyProtocol, proxyIp, proxyPort, proxyUser, proxyPassword, e) => {\r\n        if (proxyIp.indexOf('.') > -1) {\r\n            this.setState({proxyProfileName: profileName, proxyStatus: null});\r\n            axios.post(process.env.REACT_APP_PUBLIC_API + '/api/check_proxy', {\r\n                'login': this.state.login,\r\n                'Protocol': proxyProtocol,\r\n                'ip': proxyIp,\r\n                'Port': proxyPort,\r\n                'proxyUser': proxyUser,\r\n                'proxyPassword': proxyPassword,\r\n            }, {\r\n                headers: {\r\n                    'Authorization': this.state.authString,\r\n                }\r\n            }).then((res) => {\r\n\r\n                if (res.data.code === 0 && res.data.ip != \"\") {\r\n                    this.setState({proxyProfileName: profileName, proxyStatus: true});\r\n                } else if (res.data.code === 1488 && res.data.ip == \"\") {\r\n                    this.setState({proxyProfileName: profileName, proxyStatus: false});\r\n                }\r\n           });\r\n        }\r\n    };                   \r\n\r\n    render() {\r\n        return(\r\n        \t<div className=\"bg\">\r\n                <Header login = {this.state.login} />\r\n                    <h4 className={'text-center'}>Select Profile</h4>\r\n                            <Row className= \"justify-content-center\">\r\n                                <Col md = {1}></Col>\r\n                                <Col md = {2}>\r\n                                    <Button variant={'danger'} disabled = {this.state.namesToRemove.length < 0} onClick = {this.removeProfiles}>Remove Profiles</Button>\r\n                                </Col>\r\n                                <Col md = {6}></Col>\r\n                                <Col md = {2}>\r\n                                    {/*<Button target=\"_blank\"  href=\"http://account.aezakmi.run\" variant=\"dark\">Create New Profile</Button>*/}\r\n                                </Col>                                 \r\n                                <Col md = {1}></Col>                            \r\n                            </Row>\r\n                            <Row className= \"justify-content-center\">\r\n                                <Col md = {1}></Col>\r\n                                <Col md = {10}>\r\n\r\n                                    <Alert className={this.state.isLicenseActive ? \"d-none\" : \"\"} key=\"warning\" variant=\"warning\">\r\n                                            <span> Your License Expired! </span>\r\n                                    </Alert>\r\n\r\n                                    <Table striped bordered hover variant=\"light\">\r\n                                      <thead>\r\n                                        <tr>\r\n                                          <th></th>\r\n                                          <th>#</th>\r\n                                          <th>Profile Name</th>\r\n                                          <th>Screen</th>\r\n                                          <th>UserAgent</th>\r\n                                          <th>Proxy</th>\r\n                                          <th>Check Proxy</th>\r\n                                          <th>Cookies</th>\r\n                                          <th>Start Profile</th>\r\n                                        </tr>\r\n                                      </thead>\r\n\r\n                                      <tbody>\r\n                                        {this.state.userProfileInfo.length !== 0 ? this.state.namesWithCookies.map((item, i) => \r\n                                            <tr>\r\n                                            <td><Form.Check onChange={this.chekedProfiles.bind(this, item.profileName)} /></td>\r\n                                            <td>{i+1}</td>\r\n                                            <td>{item.profileName}</td>\r\n                                            <td>{item.widthvar}x{item.heightvar}</td>\r\n                                            <td>{item.userAgentConst.indexOf('Windows') > -1 ? \"Windows\" : item.userAgentConst.indexOf('Linux') > -1 ? \"Linux\" : item.userAgentConst.indexOf('Android') > -1 ? \"Linux\" : item.userAgentConst.indexOf('Mac ') > -1 ? \"Apple\" : \"???\"}  {item.userAgentConst.indexOf('OPR') > -1 ? \"Opera\" : item.userAgentConst.indexOf('Chrome') > -1 ? \"Chrome\" : item.userAgentConst.indexOf('Firefox') > -1 ? \"Firefox\" : \"???\"}</td>\r\n                                            <td>{item.proxyProtocol} {item.proxyIp !== null ? ` ${item.proxyIp} :` : \"\"} {item.proxyPort}</td>\r\n                                            <td><Button variant={this.state.proxyProfileName == item.profileName && this.state.proxyStatus == null ? \"warning\" : this.state.proxyProfileName == item.profileName && this.state.proxyStatus == true ? \"success\" : this.state.proxyProfileName == item.profileName && this.state.proxyStatus == false ? \"danger\" : \"secondary\"} onClick={this.proxyChecker.bind(this, item.profileName, item.proxyProtocol, item.proxyIp, item.proxyPort, item.proxyUser, item.proxyPassword)}> {this.state.proxyProfileName == item.profileName && this.state.proxyStatus == null ? \"♻\" : this.state.proxyProfileName == item.profileName && this.state.proxyStatus == true ? \"✓\" : this.state.proxyProfileName == item.profileName && this.state.proxyStatus == false ? \"X\" : \"Check\"} </Button></td>\r\n                                            <td><Button variant={this.localStorageCheck(item.profileName) ? \"success\" : \"danger\"}>{this.localStorageCheck(item.profileName) ? \"✓\" : \"X\"}</Button></td>\r\n                                            <td><Button variant={'success'} block onClick={this.becomeUserProfile.bind(this, item.profileName)}>A-E-Z-A-K-M-I</Button></td>\r\n                                            </tr>): null}\r\n\r\n                                        {this.state.userProfileInfo.length !== 0 ? this.state.names.map((item, i) => \r\n                                            <tr>\r\n                                            <td><Form.Check onChange={this.chekedProfiles.bind(this, item.profileName)} /></td>\r\n                                            <td>{i+1}</td>\r\n                                            <td>{item.profileName}</td>\r\n                                            <td>{item.widthvar}x{item.heightvar}</td>\r\n                                            <td>{item.userAgentConst.indexOf('Windows') > -1 ? \"Windows\" : item.userAgentConst.indexOf('Linux') > -1 ? \"Linux\" : item.userAgentConst.indexOf('Android') > -1 ? \"Linux\" : item.userAgentConst.indexOf('Mac ') > -1 ? \"Apple\" : \"???\"}  {item.userAgentConst.indexOf('OPR') > -1 ? \"Opera\" : item.userAgentConst.indexOf('Chrome') > -1 ? \"Chrome\" : item.userAgentConst.indexOf('Firefox') > -1 ? \"Firefox\" : \"???\"}</td>\r\n                                            <td>{item.proxyProtocol} {item.proxyIp !== null ? ` ${item.proxyIp} :` : \"\"} {item.proxyPort}</td>\r\n                                            <td><Button variant={this.state.proxyProfileName == item.profileName && this.state.proxyStatus == null ? \"warning\" : this.state.proxyProfileName == item.profileName && this.state.proxyStatus == true ? \"success\" : this.state.proxyProfileName == item.profileName && this.state.proxyStatus == false ? \"danger\" : \"secondary\"} onClick={this.proxyChecker.bind(this, item.profileName, item.proxyProtocol, item.proxyIp, item.proxyPort, item.proxyUser, item.proxyPassword)}> {this.state.proxyProfileName == item.profileName && this.state.proxyStatus == null ? \"♻\" : this.state.proxyProfileName == item.profileName && this.state.proxyStatus == true ? \"✓\" : this.state.proxyProfileName == item.profileName && this.state.proxyStatus == false ? \"X\" : \"Check\"} </Button></td>\r\n                                            <td><Button variant={this.localStorageCheck(item.profileName) ? \"success\" : \"danger\"}>{this.localStorageCheck(item.profileName) ? \"✓\" : \"X\"}</Button></td>\r\n                                            <td><Button variant={'success'} block onClick={this.becomeUserProfile.bind(this, item.profileName)}>A-E-Z-A-K-M-I</Button></td>\r\n                                            </tr>): null}\r\n\r\n                                      </tbody>\r\n\r\n                                    </Table>\r\n                                    \r\n                                </Col>\r\n                                <Col md = {1}></Col>\r\n\r\n                            </Row>\r\n        \t</div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withCookies(withRouter(Aezakmi));\r\n","/*global chrome*/\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Form, Button, Card, Alert} from \"react-bootstrap\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nconst crypto = require('crypto');\r\n\r\n\r\n\r\n\r\nclass Facebook extends Component {\r\n    tmr;\r\n    tmr2;\r\n    profileSelect = React.createRef();\r\n    state = {\r\n        authString: '',\r\n        login:'',\r\n      \r\n        fb_token_ico: 'fb_token.png',\r\n        bm_settings_ico: 'bm_settings.png',\r\n        fp_create_ico: 'fp_create.png',\r\n        card_check_ico: 'card_check.png',         \r\n        quick_mod_ico: 'quick_mod.png',\r\n        auto_rules_ico: 'auto_rules.png',           \r\n\r\n\r\n    };\r\n\r\n    componentWillMount() {\r\n       let authString = this.props.cookies.get('auth');\r\n       if(authString !== undefined) {\r\n           let login = this.props.cookies.get('login');\r\n           this.setState({authString: authString, login: login});\r\n       }\r\n       else {\r\n           this.props.history.push(\"/auth\");\r\n       }\r\n       \r\n\r\n    }\r\n\r\n    componentDidMount() {     \r\n    };\r\n\r\n\r\n    getFbToken = () => {\r\n        var fbRequest = {};\r\n        fbRequest.method = \"fbtoken\"\r\n        this.toBackgroundMessage(fbRequest);\r\n    };\r\n\r\n    toBackgroundMessage = (object) => {\r\n        chrome.runtime.sendMessage(object,\r\n        function (response) {});\r\n    }\r\n\r\n    openLink = (url) => {\r\n        window.open(url, '_blank');\r\n    }\r\n\r\n    cardCheckPoint = () => {\r\n        var fbRequest = {};\r\n        fbRequest.method = \"fbcardcheck\"\r\n        this.toBackgroundMessage(fbRequest);        \r\n    }   \r\n \r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Header login = {this.state.login} />\r\n                    <Alert variant=\"primary\"><h4  className={'text-center'}>Facebook Tools</h4></Alert>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col>\r\n                        &nbsp;\r\n                        </Col>                     \r\n                    </Row>                    \r\n                    <Row className= \"justify-content-center\" style={{textAlign: 'center', color: 'black', fontWeight: 500}}>\r\n                        <Col>\r\n                            <img id=\"fbtoken\" src={this.state.fb_token_ico} onMouseEnter={() => {this.setState({fb_token_ico: \"fb_token_hower.png\"});}} onMouseOut={() => {this.setState({fb_token_ico: \"fb_token.png\"});}} title=\"Get FB Ads Token\" onClick = {this.getFbToken}/>\r\n                            <label for=\"fbtoken\">FB Token</label>\r\n                        </Col>\r\n                        <Col>\r\n                            <img id=\"bmsettings\" src={this.state.bm_settings_ico} onMouseEnter={() => {this.setState({bm_settings_ico: \"bm_settings_hower.png\"});}} onMouseOut={() => {this.setState({bm_settings_ico: \"bm_settings.png\"});}} title=\"FB BM Settings\" onClick = {this.openLink.bind(this,\"https://business.facebook.com/settings/\")}/>\r\n                            <label for=\"bmsettings\">BM Settings</label>\r\n                        </Col>\r\n                        <Col>\r\n                            <img id=\"fbcreate\" src={this.state.fp_create_ico} onMouseEnter={() => {this.setState({fp_create_ico: \"fp_create_hower.png\"});}} onMouseOut={() => {this.setState({fp_create_ico: \"fp_create.png\"});}} title=\"FB Create FP\" onClick = {this.openLink.bind(this,\"https://www.facebook.com/pages/creation/\")}/>\r\n                            <label for=\"fbcreate\">Create Fun Page</label>\r\n                        </Col>                                                                      \r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col>\r\n                        &nbsp;\r\n                        </Col>                     \r\n                    </Row>\r\n                    <Row className=\"justify-content-center\" style={{textAlign: 'center', color: 'black', fontWeight: 500}}>\r\n                        <Col>\r\n                            <img id=\"cardcheck\" src={this.state.card_check_ico} onMouseEnter={() => {this.setState({card_check_ico: \"card_check_hower.png\"});}} onMouseOut={() => {this.setState({card_check_ico: \"card_check.png\"});}} title=\"FB Card ChekPoint\" onClick = {this.cardCheckPoint}/>\r\n                            <label for=\"cardcheck\">Card Check</label>\r\n                        </Col>\r\n                        <Col>\r\n                            <img id=\"quickmod\" src={this.state.quick_mod_ico} onMouseEnter={() => {this.setState({quick_mod_ico: \"quick_mod_hower.png\"});}} onMouseOut={() => {this.setState({quick_mod_ico: \"quick_mod.png\"});}} title=\"FB Quick Mode\" onClick = {this.openLink.bind(this,\"https://www.facebook.com/help/contact/186912391909649\")}/>\r\n                            <label for=\"quickmod\">Quick Moderation</label>\r\n                        </Col>\r\n                        <Col>\r\n                            <img id=\"autorules\" src={this.state.auto_rules_ico} onMouseEnter={() => {this.setState({auto_rules_ico: \"auto_rules_hower.png\"});}} onMouseOut={() => {this.setState({auto_rules_ico: \"auto_rules.png\"});}} title=\"FB AutoRules\" onClick = {this.openLink.bind(this,\"https://business.facebook.com/ads/manager/rules/management/\")}/>\r\n                            <label for=\"autorules\">Auto Rules</label>\r\n                        </Col>                                              \r\n                    </Row>\r\n\r\n                    <Button href=\"/index.html#dashboard\" style={{position: 'fixed', left: 0, bottom: 0}} variant=\"info\"><i className=\"material-icons\" style = {{color: \"black\"}}>arrow_back</i></Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(withRouter(Facebook));\r\n","/*global chrome*/\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Form, Button, Card, Alert} from \"react-bootstrap\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Header from './Header';\r\nimport axios from \"axios\";\r\nimport LangTimeJSON from '../libs/langtime.json'\r\n\r\n\r\n\r\n\r\nclass GeoSettings extends Component {\r\n    profileSelect = React.createRef();\r\n    state = {\r\n        authString: '',\r\n        login:'',\r\n      \r\n        accept_language: '',\r\n        language_Const1: '',\r\n        languageConst1: '',\r\n        sysTimeRegion: '',\r\n        sysTimeConst: '',\r\n        gpslat: '',\r\n        gpslon: '',\r\n        daylightOffset: '',\r\n        countriesArrayState: [],\r\n        timezonesArrayState: [],\r\n        selectedCountry: '',\r\n        selectedTimezone: '',\r\n        profileSaved: false,\r\n        langTimeObjects: [],\r\n\r\n    };\r\n\r\n    componentWillMount() {\r\n       let authString = this.props.cookies.get('auth');\r\n       if(authString !== undefined) {\r\n           let login = this.props.cookies.get('login');\r\n           this.setState({authString: authString, login: login});\r\n       }\r\n       else {\r\n           this.props.history.push(\"/auth\");\r\n       }      \r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getCountryList();\r\n      this.parseGeoSettings();\r\n    }\r\n\r\n    //Получаем список доступных для выбора стран\r\n    getCountryList = () => {\r\n      let countriesArray = [];\r\n      LangTimeJSON.forEach((item) => {    \r\n          countriesArray.push(item.country)\r\n      });\r\n\r\n      let result = [];\r\n\r\n      for (let str of countriesArray) {\r\n        if (!result.includes(str)) {\r\n          result.push(str);\r\n        }\r\n      }\r\n\r\n      this.setState({countriesArrayState: result.sort()})\r\n    \r\n    }\r\n\r\n    //Получаем список-масив доступных в выбранной стране таймзон\r\n    getTimezonesList = () => {\r\n      let timezonesArray = [];\r\n      LangTimeJSON.forEach((item) => {\r\n        if (item.country == this.state.selectedCountry) {\r\n              timezonesArray.push(item.timezone)\r\n          }\r\n      });\r\n      this.setState({timezonesArrayState: timezonesArray.sort()})  \r\n   \r\n    }\r\n\r\n    //Получаем объект по заданным параметрам поиска, получаем оффсет с апи и устанавливаем стейты\r\n    findLangTime = () => {\r\n      let selectedLangTime = {};\r\n      LangTimeJSON.forEach((item) => {\r\n        if (item.country == this.state.selectedCountry && item.timezone == this.state.selectedTimezone) { \r\n              selectedLangTime = item;\r\n          }\r\n      });\r\n\r\n      this.setState({\r\n            accept_language: selectedLangTime.accept_language,\r\n            language_Const1: selectedLangTime.nav_lang,\r\n            languageConst1: selectedLangTime.nav_langs,\r\n            sysTimeRegion: selectedLangTime.timezone,\r\n            gpslat: selectedLangTime.gps[0],\r\n            gpslon: selectedLangTime.gps[1]\r\n      });       \r\n\r\n      axios.post(process.env.REACT_APP_PUBLIC_API + '/api/get_time_offset', {\r\n          'timeZone': selectedLangTime.timezone,\r\n          'date': Date.now()\r\n      }).then((res) => {\r\n          this.setState({\r\n                daylightOffset: res.data.offset\r\n          }); \r\n      })\r\n\r\n    }\r\n\r\n    changeForm = (e) => {\r\n        let id = e.currentTarget.id;\r\n        let value = e.currentTarget.value;\r\n\r\n        switch (id) {\r\n            case \"countriesArray\":\r\n\r\n                this.setState(()=>({selectedCountry: value}), ()=> {\r\n\r\n                  this.getTimezonesList();\r\n                });                \r\n            break;\r\n            case \"timezonesArray\":\r\n\r\n                this.setState(()=>({selectedTimezone: value}), ()=> {\r\n\r\n                  this.findLangTime();\r\n                });\r\n            break;\r\n        }\r\n    };\r\n\r\n    changeInputs = (e) => {\r\n      let id = e.currentTarget.id;    \r\n      let value = e.currentTarget.value;\r\n      switch (id) {\r\n            case \"acceptLanguage\":\r\n                 this.setState(()=>({accept_language: value}), ()=> {});\r\n            break;\r\n            case \"allLanguages\":\r\n                 this.setState(()=>({languageConst1: value}), ()=> {});\r\n            break;\r\n            case \"mainLanguage\":\r\n                 this.setState(()=>({language_Const1: value}), ()=> {});\r\n            break;\r\n            case \"timezoneRegion\":\r\n                 this.setState(()=>({sysTimeRegion: value}), ()=> {});\r\n            break;\r\n            case \"momentOffset\":\r\n                 this.setState(()=>({daylightOffset: value}), ()=> {});\r\n            break;\r\n            case \"gpslat\":\r\n                 this.setState(()=>({gpslat: value}), ()=> {});\r\n            break;\r\n            case \"gpslon\":\r\n                 this.setState(()=>({gpslon: value}), ()=> {});\r\n            break;                                                                                                               \r\n      }\r\n    }    \r\n\r\n    parseGeoSettings = () => {\r\n      try {\r\n        let userProfile = JSON.parse(localStorage.getItem('userProfile'));\r\n\r\n        this.setState({\r\n            accept_language: userProfile.accept_language,\r\n            language_Const1: userProfile.language_Const1,\r\n            languageConst1: userProfile.languageConst1,\r\n            sysTimeRegion: userProfile.sysTimeRegion,\r\n            sysTimeConst: userProfile.sysTimeConst,\r\n            gpslat: userProfile.gpslat,\r\n            gpslon: userProfile.gpslon,\r\n            daylightOffset: userProfile.daylightOffset,\r\n            profileName: userProfile.profileName\r\n        });\r\n      } catch (err) {}       \r\n    }\r\n\r\n    setGeoSettings = () => {\r\n        let userProfile = JSON.parse(localStorage.getItem('userProfile'));\r\n\r\n        if (this.state.accept_language !== '' && this.state.language_Const1 !== '' && this.state.languageConst1 !== '' && this.state.sysTimeRegion !== '' && this.state.sysTimeConst !== '' && this.state.gpslat !== '' && this.state.gpslon !== '' && this.state.daylightOffset !== '') {\r\n            userProfile.accept_language = this.state.accept_language;\r\n            userProfile.language_Const1 = this.state.language_Const1;\r\n            userProfile.languageConst1 = this.state.languageConst1;\r\n            userProfile.sysTimeRegion = this.state.sysTimeRegion;\r\n            userProfile.sysTimeConst = this.state.sysTimeConst;\r\n            userProfile.gpslat = this.state.gpslat;\r\n            userProfile.gpslon = this.state.gpslon;\r\n            userProfile.daylightOffset = this.state.daylightOffset;\r\n\r\n\r\n            localStorage.setItem('userProfile', JSON.stringify(userProfile));\r\n\r\n            let d = {'method': 'updateLangTime'};\r\n            this.toBackgroundMessage(d);\r\n          axios.post(process.env.REACT_APP_PUBLIC_API + '/api/modify_user_profile', {\r\n              'profileName': this.state.profileName,\r\n              'login': this.state.login,\r\n              'accept_language': this.state.accept_language,\r\n              'language_Const1': this.state.language_Const1,\r\n              'languageConst1': this.state.languageConst1,\r\n              'sysTimeRegion': this.state.sysTimeRegion,\r\n              'gpslat': this.state.gpslat,\r\n              'gpslon': this.state.gpslon,\r\n              'daylightOffset': this.state.daylightOffset,\r\n              'method': \"geo\"\r\n          }, {\r\n              headers: {\r\n                  'Authorization': this.state.authString,\r\n              }\r\n          }) \r\n        }\r\n    }\r\n\r\n    toBackgroundMessage = (object) => {\r\n        chrome.runtime.sendMessage(object,\r\n        function (response) {});\r\n    }\r\n  \r\n    render() {\r\n\r\n        return (\r\n            <div className=\"bg-free\">\r\n                <Header login = {this.state.login} />\r\n                    <Alert variant=\"primary\"><h4 className={'text-center'}>Geolocation Settings</h4></Alert>\r\n                    \r\n                            <Row>\r\n\r\n                                <Col md={12}>\r\n                                  <Form.Label className='text-mono'>\r\n                                    Country\r\n                                  </Form.Label>\r\n                                  <Form.Control className='prof-select' value={this.state.selectedCountry} id='countriesArray' as=\"select\" onChange={this.changeForm}>\r\n                                    <option></option>\r\n                                    {this.state.countriesArrayState.map((item) => <option value={item}>{item}</option>)}\r\n                                  </Form.Control>\r\n                                </Col>\r\n\r\n                                <Col md={12}>\r\n                                  <Form.Label className='text-mono'>\r\n                                    TimeZone\r\n                                  </Form.Label>\r\n                                  <Form.Control className='prof-select' value={this.state.selectedTimezone} id='timezonesArray' as=\"select\" onChange={this.changeForm}>\r\n                                    <option></option>\r\n                                    {this.state.timezonesArrayState.map((item) => <option value={item}>{item}</option>)}\r\n                                  </Form.Control>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n\r\n                                <Form.Group as={Col} md=\"1\">\r\n                                    <Form.Label>Accept Language</Form.Label>\r\n                                    <Form.Control\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.accept_language} id='acceptLanguage' type=\"text\"/>\r\n                                </Form.Group> \r\n\r\n                                <Form.Group as={Col} md=\"1\">\r\n                                    <Form.Label>All Languages</Form.Label>\r\n                                    <Form.Control\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.languageConst1} id='allLanguages' type=\"text\"/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} md=\"1\">\r\n                                    <Form.Label>Main Language</Form.Label>\r\n                                    <Form.Control\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.language_Const1} id='mainLanguage' type=\"text\"/>\r\n                                </Form.Group> \r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n\r\n                                <Form.Group as={Col} md=\"6\">\r\n                                    <Form.Label>TimeZone</Form.Label>\r\n                                    <Form.Control\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.sysTimeRegion} id='timezoneRegion' type=\"text\"/>\r\n                                </Form.Group> \r\n\r\n                                <Form.Group as={Col} md=\"6\">\r\n                                    <Form.Label>Time Offset</Form.Label>\r\n                                    <Form.Control\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.daylightOffset} id='momentOffset' type=\"text\"/>\r\n                                </Form.Group>\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n\r\n                                <Form.Group as={Col} md=\"4\">\r\n                                    <Form.Label>GPS latitude</Form.Label>\r\n                                    <Form.Control\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.gpslat} id='gpslat' type=\"text\"/>\r\n                                </Form.Group> \r\n\r\n                                <Form.Group as={Col} md=\"4\">\r\n                                    <Form.Label>GPS longitude</Form.Label>\r\n                                    <Form.Control\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.gpslon} id='gpslon' type=\"text\"/>\r\n                                </Form.Group>\r\n\r\n                                <Col md={4}>\r\n                                  <Button variant={'success'} block onClick={this.setGeoSettings}>Set New Geo-Settings</Button>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                              <Col md={4}><br /></Col>\r\n                            </Row>                                                         \r\n\r\n\r\n                    <Button href=\"/index.html#dashboard\" style={{position: 'fixed', left: 0, bottom: 0}} variant=\"info\"><i className=\"material-icons\" style = {{color: \"black\"}}>arrow_back</i></Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(withRouter(GeoSettings));","/*global chrome*/\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Form, Button, Card, Alert} from \"react-bootstrap\";\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Header from './Header';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nclass ProxySettings extends Component {\r\n    profileSelect = React.createRef();\r\n    state = {\r\n        authString: '',\r\n        login:'',      \r\n        proxyProtocol: '',\r\n        proxyPort: '',\r\n        proxyAddress: '',\r\n        proxyLogin: '',\r\n        proxyPassword: '',\r\n        status911: false,\r\n        proxyStatus: null,\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n       let authString = this.props.cookies.get('auth');\r\n       if(authString !== undefined) {\r\n           let login = this.props.cookies.get('login');\r\n           this.setState({authString: authString, login: login});\r\n       }\r\n       else {\r\n           this.props.history.push(\"/auth\");\r\n       }      \r\n    }\r\n\r\n    componentDidMount() {\r\n      this.parseProxySettings();\r\n    }\r\n\r\n    changeForm = (e) => {\r\n        let id = e.currentTarget.id;\r\n        let value = e.currentTarget.value;\r\n\r\n        switch (id) {\r\n            case \"proxyProtocol\":\r\n                this.setState(()=>({proxyProtocol: value}), ()=> {});                \r\n            break;\r\n\r\n        }\r\n    };    \r\n\r\n\r\n    changeInputs = (e) => {\r\n      let id = e.currentTarget.id;    \r\n      let value = e.currentTarget.value;\r\n      switch (id) {\r\n            case \"proxyAddress\":\r\n                 this.setState(()=>({proxyAddress: value}), ()=> {});\r\n            break;\r\n            case \"proxyPort\":\r\n                 this.setState(()=>({proxyPort: value}), ()=> {});\r\n            break;\r\n            case \"proxyLogin\":\r\n                 this.setState(()=>({proxyLogin: value}), ()=> {});\r\n            break;\r\n            case \"proxyPassword\":\r\n                 this.setState(()=>({proxyPassword: value}), ()=> {});\r\n            break;                                                                                                              \r\n      }\r\n    }\r\n\r\n    parseProxySettings = () => {\r\n      let userProfile = JSON.parse(localStorage.getItem('userProfile'));\r\n      this.setState(()=>({\r\n        proxyProtocol: userProfile.proxyProtocol,\r\n        proxyPort: userProfile.proxyPort,\r\n        proxyAddress: userProfile.proxyIp,\r\n        proxyLogin:  userProfile.proxyUser,\r\n        proxyPassword: userProfile.proxyPassword,\r\n        profileName: userProfile.profileName,         \r\n      }))\r\n    }\r\n\r\n    proxyChecker = () => {\r\n            this.setState({proxyStatus: null});\r\n            axios.post(process.env.REACT_APP_PUBLIC_API + '/api/check_proxy', {\r\n                'login': this.state.login,\r\n                'Protocol': this.state.proxyProtocol,\r\n                'ip': this.state.proxyAddress,\r\n                'Port': this.state.proxyPort,\r\n                'proxyUser': this.state.proxyLogin,\r\n                'proxyPassword': this.state.proxyPassword,\r\n            }, {\r\n                headers: {\r\n                    'Authorization': this.state.authString,\r\n                }\r\n            }).then((res) => {\r\n\r\n                if (res.data.code === 0 && res.data.ip != \"\") {\r\n                    this.setState({proxyStatus: true});\r\n                } else if (res.data.code === 1488 && res.data.ip == \"\") {\r\n                    this.setState({proxyStatus: false});\r\n                }\r\n           });\r\n\r\n    };\r\n\r\n    change911 = () => {\r\n      let newVal = !this.state.status911;\r\n      this.setState({status911: newVal});\r\n    }\r\n\r\n    setProxy = () => {\r\n      let userProfile = JSON.parse(localStorage.getItem('userProfile'));\r\n      if (this.state.status911) {\r\n          userProfile.enable911 = \"1\";\r\n          userProfile.proxyProtocol = this.state.proxyProtocol;\r\n          userProfile.proxyIp = this.state.proxyAddress;\r\n          userProfile.proxyPort = this.state.proxyPort;\r\n          userProfile.proxyUser = this.state.proxyLogin;\r\n          userProfile.proxyPassword = this.state.proxyPassword;\r\n\r\n          localStorage.setItem('userProfile', JSON.stringify(userProfile));\r\n          let d = {'method': 'updateProxy'};\r\n          this.toBackgroundMessage(d);           \r\n      } else {\r\n          axios.post(process.env.REACT_APP_PUBLIC_API + '/api/get_ip_info', {\r\n              'ip': this.state.proxyAddress,\r\n              'dateNow': Date.now(),\r\n          }, {\r\n              headers: {\r\n                  'Authorization': \"F490BD70F30ACA66A2BA8D00F40479E41CE945FC939A6919A95C73C7BBC26853\",\r\n              }\r\n          }).then((res) => {\r\n              userProfile.accept_language = res.data.lang.value;\r\n              userProfile.language_Const1 = res.data.lang.lang;\r\n              userProfile.languageConst1 = res.data.lang.langs;\r\n              userProfile.sysTimeRegion = res.data.region;\r\n              userProfile.gpslat = res.data.geo[0];\r\n              userProfile.gpslon = res.data.geo[1];\r\n              userProfile.daylightOffset = res.data.offset;\r\n          }).then(() => {\r\n            userProfile.proxyProtocol = this.state.proxyProtocol;\r\n            userProfile.proxyIp = this.state.proxyAddress;\r\n            userProfile.proxyPort = this.state.proxyPort;\r\n            userProfile.proxyUser = this.state.proxyLogin;\r\n            userProfile.proxyPassword = this.state.proxyPassword;\r\n\r\n            localStorage.setItem('userProfile', JSON.stringify(userProfile));\r\n            let d = {'method': 'updateProxy'};\r\n            this.toBackgroundMessage(d);\r\n\r\n          });\r\n          axios.post(process.env.REACT_APP_PUBLIC_API + '/api/modify_user_profile', {\r\n              'profileName': this.state.profileName,\r\n              'login': this.state.login,\r\n              'proxyProtocol': this.state.proxyProtocol,\r\n              'proxyIp': this.state.proxyAddress,\r\n              'proxyPort': this.state.proxyPort,\r\n              'proxyUser': this.state.proxyLogin,\r\n              'proxyPassword': this.state.proxyPassword,\r\n              'accept_language': this.state.accept_language,\r\n              'language_Const1': this.state.language_Const1,\r\n              'languageConst1': this.state.languageConst1,\r\n              'sysTimeRegion': this.state.sysTimeRegion,\r\n              'gpslat': this.state.gpslat,\r\n              'gpslon': this.state.gpslon,\r\n              'daylightOffset': this.state.daylightOffset,              \r\n              'method': \"proxy\"\r\n          }, {\r\n              headers: {\r\n                  'Authorization': this.state.authString,\r\n              }\r\n          })          \r\n      }\r\n\r\n\r\n\r\n   \r\n    }       \r\n\r\n    toBackgroundMessage = (object) => {\r\n        chrome.runtime.sendMessage(object,\r\n        function (response) {});\r\n    }\r\n  \r\n    render() {\r\n\r\n        return (\r\n            <div className=\"bg-free\">\r\n                <Header login = {this.state.login} />\r\n                    <Alert variant=\"primary\"><h4 className={'text-center'}>Proxy Settings</h4></Alert>\r\n                      \r\n                            <Row>\r\n\r\n                            <Button variant={this.state.proxyStatus == null ? \"warning\" : this.state.proxyStatus == true ? \"success\" : this.state.proxyStatus == false ? \"danger\" : \"secondary\"} block disabled={this.state.status911} onClick={this.checkProxy}>CheckProxy</Button>\r\n\r\n                                <Col md={12}>\r\n                                  <Form.Label className='text-mono'>\r\n                                    Protocol\r\n                                  </Form.Label>\r\n                                  <Form.Control className='prof-select' value={this.state.proxyProtocol} id='proxyProtocol' as=\"select\" onChange={this.changeForm} disabled={this.state.status911}>\r\n                                    <option value=\"http\">http</option>\r\n                                    <option value=\"https\">https</option>\r\n                                    <option value=\"socks4\">socks4</option>\r\n                                    <option value=\"socks5\">socks5</option>\r\n                                  </Form.Control>\r\n                                </Col>\r\n\r\n                                <Form.Group as={Col} md=\"1\">\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control disabled={this.state.status911}\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.proxyAddress} id='proxyAddress' type=\"text\"/>\r\n                                </Form.Group> \r\n\r\n                                <Form.Group as={Col} md=\"1\">\r\n                                    <Form.Label>Port</Form.Label>\r\n                                    <Form.Control \r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.proxyPort} id='proxyPort' type=\"text\"/>\r\n                                </Form.Group> \r\n\r\n                                <Form.Group as={Col} md=\"1\">\r\n                                    <Form.Label>Login</Form.Label>\r\n                                    <Form.Control disabled={this.state.proxyProtocol == \"socks5\" || this.state.proxyProtocol == \"socks5\" || this.state.status911}\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.proxyLogin} id='proxyLogin' type=\"text\"/>\r\n                                </Form.Group> \r\n                                <Form.Group as={Col} md=\"1\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control disabled={this.state.proxyProtocol == \"socks5\" || this.state.proxyProtocol == \"socks5\" || this.state.status911}\r\n                                                  onChange={this.changeInputs}\r\n                                                  value={this.state.proxyPassword} id='proxyPassword' type=\"text\"/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                  <Form.Check\r\n                                    name=\"911\"\r\n                                    label=\"911\"\r\n                                    onChange={this.change911}\r\n                                    checked={this.state.status911}\r\n                                    id=\"is911\"\r\n                                  />\r\n                                </Form.Group>                                \r\n\r\n                                <Button variant={'success'} block onClick={this.setProxy}>Set Proxy</Button>                                 \r\n                                                                                                                       \r\n                            </Row>\r\n\r\n                            <Row>\r\n                              <Col md={4}><br /></Col>\r\n                            </Row>                                                         \r\n\r\n\r\n                    <Button href=\"/index.html#dashboard\" style={{position: 'fixed', left: 0, bottom: 0}} variant=\"info\"><i className=\"material-icons\" style = {{color: \"black\"}}>arrow_back</i></Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(withRouter(ProxySettings));    ","import Dashboard from \"../views/Dashboard\";\r\nimport AuthForm from \"../views/AuthForm\";\r\nimport UploadProfile from \"../views/UploadProfile\";\r\nimport SaveProfile from \"../views/SaveProfile\";\r\nimport UploadCookie from \"../views/UploadCookie\";\r\nimport Aezakmi from \"../views/Aezakmi\";\r\nimport Facebook from \"../views/Facebook\";\r\nimport GeoSettings from \"../views/GeoSettings\";\r\nimport ProxySettings from \"../views/ProxySettings\";\r\n\r\n\r\nconst BaseRouter = [\r\n    {\r\n        path: '/dashboard',\r\n        name: 'Home',\r\n        component: Dashboard,\r\n    },\r\n    {\r\n        path: '/auth',\r\n        name: 'auth',\r\n        component: AuthForm,\r\n    },\r\n    {\r\n        path: '/upload',\r\n        name: 'upload',\r\n        component: UploadProfile,\r\n    },\r\n    {\r\n        path: '/saveprofile',\r\n        name: 'saveprofile',\r\n        component: SaveProfile,\r\n    },\r\n    {\r\n        path: '/uploadcookie',\r\n        name: 'uploadcookie',\r\n        component: UploadCookie,\r\n    },\r\n    {\r\n        path: '/aezakmi',\r\n        name: 'aezakmi',\r\n        component: Aezakmi,\r\n    },\r\n    {\r\n        path: '/facebook',\r\n        name: 'facebook',\r\n        component: Facebook,\r\n    },\r\n    {\r\n        path: '/geosettings',\r\n        name: 'geosettings',\r\n        component: GeoSettings,\r\n    },\r\n    {\r\n        path: '/proxysettings',\r\n        name: 'proxysettings',\r\n        component: ProxySettings,\r\n    }          \r\n         \r\n\r\n];\r\nexport default BaseRouter;","import React, { Component } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n// import logo from './logo.svg';\r\nimport './css/bootstrap.css';\r\nimport './App.css';\r\nimport Dashboard from \"./views/Dashboard\"\r\nimport AuthForm from \"./views/AuthForm\";\r\nimport UploadProfile from \"./views/UploadProfile\";\r\nimport SaveProfile from \"./views/SaveProfile\";\r\nimport UploadCookie from \"./views/UploadCookie\";\r\nimport Aezakmi from \"./views/Aezakmi\";\r\nimport Facebook from \"./views/Facebook\";\r\nimport GeoSettings from \"./views/GeoSettings\";\r\nimport ProxySettings from \"./views/ProxySettings\";\r\n\r\nimport BaseRouter from './routes/BaseRouter'\r\n\r\nimport {Container} from \"react-bootstrap\";\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <CookiesProvider>\r\n        <Switch>\r\n          <Route exact path = \"/\" component = {AuthForm} />\r\n            {BaseRouter.map((props) => <Route path = {props.path} component = {props.component} />)}\r\n        </Switch>\r\n        </CookiesProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Container>\r\n\r\n\r\n                <Col md={12}>\r\n            <App />\r\n                </Col>\r\n\r\n        </Container>\r\n    </HashRouter>\r\n\r\n\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}